package;

class BMFontData {

	static var width:Int = 8;
	static var height:Int = 8;

	public function new() {}

	public function getTile(charCode:Int):Int
	{
		var tile:Int = -1;
		for (range in ranges)
		{
			if ( charCode >= (range >> 16) && charCode <= (range & 0xffff) ) {
				tile = charCode - (range >> 16);
				break;
			}
		}
		if (tile < 0) throw("Error, charCode don't exists into BMFontData");
		return tile;
	}

	static var ranges:Array<Int> = [
		(32 << 16) + 32, // from 32 to 32
		(65 << 16) + 122 // from 65 to 122
	];

	static var data:Array<Int> = [
		// 32 to 32
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 032  0x20  SP	 Space

		// 65 to 122
		0x30, 0x78, 0xCC, 0xCC, 0xFC, 0xCC, 0xCC, 0x00, // 065  0x41  A	 Uppercase A
		0xFC, 0x66, 0x66, 0x7C, 0x66, 0x66, 0xFC, 0x00, // 066  0x42  B	 Uppercase B
		0x3C, 0x66, 0xC0, 0xC0, 0xC0, 0x66, 0x3C, 0x00, // 067  0x43  C	 Uppercase C
		0xF8, 0x6C, 0x66, 0x66, 0x66, 0x6C, 0xF8, 0x00, // 068  0x44  D	 Uppercase D
		0xFE, 0x62, 0x68, 0x78, 0x68, 0x62, 0xFE, 0x00, // 069  0x45  E	 Uppercase E
		0xFE, 0x62, 0x68, 0x78, 0x68, 0x60, 0xF0, 0x00, // 070  0x46  F	 Uppercase F
		0x3C, 0x66, 0xC0, 0xC0, 0xCE, 0x66, 0x3A, 0x00, // 071  0x47  G	 Uppercase G
		0xCC, 0xCC, 0xCC, 0xFC, 0xCC, 0xCC, 0xCC, 0x00, // 072  0x48  H	 Uppercase H
		0x78, 0x30, 0x30, 0x30, 0x30, 0x30, 0x78, 0x00, // 073  0x49  I	 Uppercase I
		0x1E, 0x0C, 0x0C, 0x0C, 0xCC, 0xCC, 0x78, 0x00, // 074  0x4A  J	 Uppercase J
		0xE6, 0x66, 0x6C, 0x78, 0x6C, 0x66, 0xE6, 0x00, // 075  0x4B  K	 Uppercase K
		0xF0, 0x60, 0x60, 0x60, 0x62, 0x66, 0xFE, 0x00, // 076  0x4C  L	 Uppercase L
		0xC6, 0xEE, 0xFE, 0xFE, 0xD6, 0xC6, 0xC6, 0x00, // 077  0x4D  M	 Uppercase M
		0xC6, 0xE6, 0xF6, 0xDE, 0xCE, 0xC6, 0xC6, 0x00, // 078  0x4E  N	 Uppercase N
		0x38, 0x6C, 0xC6, 0xC6, 0xC6, 0x6C, 0x38, 0x00, // 079  0x4F  O	 Uppercase O
		0xFC, 0x66, 0x66, 0x7C, 0x60, 0x60, 0xF0, 0x00, // 080  0x50  P	 Uppercase P
		0x7C, 0xC6, 0xC6, 0xC6, 0xD6, 0x7C, 0x0E, 0x00, // 081  0x51  Q	 Uppercase Q
		0xFC, 0x66, 0x66, 0x7C, 0x6C, 0x66, 0xE6, 0x00, // 082  0x52  R	 Uppercase R
		0x7C, 0xC6, 0xE0, 0x78, 0x0E, 0xC6, 0x7C, 0x00, // 083  0x53  S	 Uppercase S
		0xFC, 0xB4, 0x30, 0x30, 0x30, 0x30, 0x78, 0x00, // 084  0x54  T	 Uppercase T
		0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xFC, 0x00, // 085  0x55  U	 Uppercase U
		0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0x78, 0x30, 0x00, // 086  0x56  V	 Uppercase V
		0xC6, 0xC6, 0xC6, 0xC6, 0xD6, 0xFE, 0x6C, 0x00, // 087  0x57  W	 Uppercase W
		0xC6, 0xC6, 0x6C, 0x38, 0x6C, 0xC6, 0xC6, 0x00, // 088  0x58  X	 Uppercase X
		0xCC, 0xCC, 0xCC, 0x78, 0x30, 0x30, 0x78, 0x00, // 089  0x59  Y	 Uppercase Y
		0xFE, 0xC6, 0x8C, 0x18, 0x32, 0x66, 0xFE, 0x00, // 090  0x5A  Z	 Uppercase Z
		0x78, 0x60, 0x60, 0x60, 0x60, 0x60, 0x78, 0x00, // 091  0x5B  [	 Opening bracket
		0xC0, 0x60, 0x30, 0x18, 0x0C, 0x06, 0x02, 0x00, // 092  0x5C  \	 Backslash
		0x78, 0x18, 0x18, 0x18, 0x18, 0x18, 0x78, 0x00, // 093  0x5D  ]	 Closing bracket
		0x10, 0x38, 0x6C, 0xC6, 0x00, 0x00, 0x00, 0x00, // 094  0x5E  ^	 Caret - circumflex
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, // 095  0x5F  _	 Underscore
		0x30, 0x30, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, // 096  0x60  `	 Grave accent
		0x00, 0x00, 0x78, 0x0C, 0x7C, 0xCC, 0x76, 0x00, // 097  0x61  a	 Lowercase a
		0xE0, 0x60, 0x60, 0x7C, 0x66, 0x66, 0xDC, 0x00, // 098  0x62  b	 Lowercase b
		0x00, 0x00, 0x78, 0xCC, 0xC0, 0xCC, 0x78, 0x00, // 099  0x63  c	 Lowercase c
		0x1C, 0x0C, 0x0C, 0x7C, 0xCC, 0xCC, 0x76, 0x00, // 100  0x64  d	 Lowercase d
		0x00, 0x00, 0x78, 0xCC, 0xFC, 0xC0, 0x78, 0x00, // 101  0x65  e	 Lowercase e
		0x38, 0x6C, 0x64, 0xF0, 0x60, 0x60, 0xF0, 0x00, // 102  0x66  f	 Lowercase f
		0x00, 0x00, 0x76, 0xCC, 0xCC, 0x7C, 0x0C, 0xF8, // 103  0x67  g	 Lowercase g
		0xE0, 0x60, 0x6C, 0x76, 0x66, 0x66, 0xE6, 0x00, // 104  0x68  h	 Lowercase h
		0x30, 0x00, 0x70, 0x30, 0x30, 0x30, 0x78, 0x00, // 105  0x69  i	 Lowercase i
		0x0C, 0x00, 0x1C, 0x0C, 0x0C, 0xCC, 0xCC, 0x78, // 106  0x6A  j	 Lowercase j
		0xE0, 0x60, 0x66, 0x6C, 0x78, 0x6C, 0xE6, 0x00, // 107  0x6B  k	 Lowercase k
		0x70, 0x30, 0x30, 0x30, 0x30, 0x30, 0x78, 0x00, // 108  0x6C  l	 Lowercase l
		0x00, 0x00, 0xCC, 0xFE, 0xFE, 0xD6, 0xD6, 0x00, // 109  0x6D  m	 Lowercase m
		0x00, 0x00, 0xB8, 0xCC, 0xCC, 0xCC, 0xCC, 0x00, // 110  0x6E  n	 Lowercase n
		0x00, 0x00, 0x78, 0xCC, 0xCC, 0xCC, 0x78, 0x00, // 111  0x6F  o	 Lowercase o
		0x00, 0x00, 0xDC, 0x66, 0x66, 0x7C, 0x60, 0xF0, // 112  0x70  p	 Lowercase p
		0x00, 0x00, 0x76, 0xCC, 0xCC, 0x7C, 0x0C, 0x1E, // 113  0x71  q	 Lowercase q
		0x00, 0x00, 0xDC, 0x76, 0x62, 0x60, 0xF0, 0x00, // 114  0x72  r	 Lowercase r
		0x00, 0x00, 0x7C, 0xC0, 0x70, 0x1C, 0xF8, 0x00, // 115  0x73  s	 Lowercase s
		0x10, 0x30, 0xFC, 0x30, 0x30, 0x34, 0x18, 0x00, // 116  0x74  t	 Lowercase t
		0x00, 0x00, 0xCC, 0xCC, 0xCC, 0xCC, 0x76, 0x00, // 117  0x75  u	 Lowercase u
		0x00, 0x00, 0xCC, 0xCC, 0xCC, 0x78, 0x30, 0x00, // 118  0x76  v	 Lowercase v
		0x00, 0x00, 0xC6, 0xC6, 0xD6, 0xFE, 0x6C, 0x00, // 119  0x77  w	 Lowercase w
		0x00, 0x00, 0xC6, 0x6C, 0x38, 0x6C, 0xC6, 0x00, // 120  0x78  x	 Lowercase x
		0x00, 0x00, 0xCC, 0xCC, 0xCC, 0x7C, 0x0C, 0xF8, // 121  0x79  y	 Lowercase y
		0x00, 0x00, 0xFC, 0x98, 0x30, 0x64, 0xFC, 0x00, // 122  0x7A  z	 Lowercase z
	];
	
}
